// 再帰 (O(log n))
export const powRecursive = (x, n) => {
    if (!n)
        return 1;
    if (n % 2)
        return x * powRecursive(x, n - 1);
    return powRecursive(x * x, n / 2);
    // const half = powRecursive(x, n / 2);
    // return half * half;
};
// ループ (O(log n))
export const powLoop = (x, n) => {
    let result = 1;
    while (n > 0) {
        if (n % 2)
            result *= x;
        x *= x;
        n = Math.floor(n / 2);
    }
    return result;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUFDaEIsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLENBQUMsQ0FBUyxFQUFFLENBQVMsRUFBVSxFQUFFO0lBQzNELElBQUksQ0FBQyxDQUFDO1FBQUUsT0FBTyxDQUFDLENBQUM7SUFDakIsSUFBSSxDQUFDLEdBQUcsQ0FBQztRQUFFLE9BQU8sQ0FBQyxHQUFHLFlBQVksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzdDLE9BQU8sWUFBWSxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2xDLHVDQUF1QztJQUN2QyxzQkFBc0I7QUFDeEIsQ0FBQyxDQUFDO0FBRUYsaUJBQWlCO0FBQ2pCLE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBRyxDQUFDLENBQVMsRUFBRSxDQUFTLEVBQVUsRUFBRTtJQUN0RCxJQUFJLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDZixPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUNiLElBQUksQ0FBQyxHQUFHLENBQUM7WUFBRSxNQUFNLElBQUksQ0FBQyxDQUFDO1FBQ3ZCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDUCxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsQ0FBQyJ9